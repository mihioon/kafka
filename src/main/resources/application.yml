spring:
  kafka:
    producer: # ????
      properties: # ????
        min:
          insync:
            replicas: 2 # ?? ???? ???? ? : ???? ????? ???? ?? ??? ? ?? ???? ??? ??? ??? ?
kafka: # @Configuration??? ?? ?? @Configuration???? ??? ?
  # Kafka ?????(???? ?? ???)? ????? ??? ? ??? ?? ??? ??
  # bootstrapAddress: localhost:9092, localhost:9093
  bootstrapAddress: localhost:9092
  admin:
    properties: # Kafka AdminClient? ??? ?? ??? ?? / ? ??? ?? ?? ??, ?? ?? ?? ??
  topics:
    order-created-events:
      name: order-created-events
      replicationFactor: 2
      numPartitions: 2
    payment-processed-events:
      name: payment-processed-events
      numPartitions: 3
      replicationFactor: 2
  topic:
    alarm:
      name: alarm # ?? ??
      replicationFactor: 2 # ?? ?? : ??? ???? ??? ???? ?
      # ?? ???? ??? ????? ?? > ?? = ??+??? / 2? ???? ??? ?? ???? ??? ??? ???
      # ????: ????? ???? ?? ???(????? ?? ???? ??)?? ?? > ???(follower) ???? ??
      # ???: ???? ????? ?? ?????? ???? ?? > ??? ??? ???? ?? ??? ??
      numPartitions: 2 # ??? ??? ? : ???? 2???, ?? ?? ?? ??. ??? ???? ??? ??? ?
      # ??? ????? numPartitions 1? ???, ?? ?? ??? ???? ???, ??? ?? ?? ???? ??? ???? ??
  consumer:
    alarm:
      # A : B / A: ???? ??? ?(key) B: ?? Kafka ??? ?? ID
      # rdb-group-id: createAlarmInRDB # ??? ??? rdb-group-id ??? ?? ??? ??, ????? ?? ???? ??
      # redis-group-id: publishInRedis

    autoOffsetResetConfig: latest # ??? ???? ???, ?? ????? ??? ???? : ??? ??? ??? ??
  producer:
    acksConfig: all # ???? ???? ?? ?, ?? ???? ???? ???? ??? ??? ??? ????? ??
    retry: 3 # ??? ?? ?? ? ??? ??
    enable-idempotence:  # ???? ?? ??? ??
    max-in-flight-requests-per-connection: 3 # ? ?? ??? ? ?? ???? ?? ??2